{"version":3,"file":"static/js/954.786080c5.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,6BAAgCC,IADhC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,QAAQC,KAAI,YAC7B,MAAO,CACHC,GAF4C,EAAhBA,GAG5BC,MAH4C,EAAZA,MAKvC,KAPsB,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYS,EADZ,2BADG,cACpBP,EADoB,yBAInBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,EAAAA,IAAA,iBACXY,GADW,OACDX,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfS,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKW,KAAKT,KAAI,YAC5B,MAAO,CACLU,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CX,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefY,EAAgB,mCAAG,WAAML,GAAN,uFACPd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLc,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCd,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD,4HC2B7B,EA3DyB,WAAO,IAAD,IAE7B,EChB6B,SAAAK,GAC7B,OAAwCU,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBd,GAASe,MAAK,SAAAC,GAA2B,OAC3DJ,EAAgBI,EAD2C,GAG9D,GAAE,CAAChB,IAEG,CAAEW,aAAAA,EACV,CDM0BM,EADLC,EAAAA,EAAAA,MAAZlB,SACAW,EAAR,EAAQA,aAGFQ,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIJ,EAAV,UACG,KACD,mBAAQK,KAAK,SAAb,yBAGF,0BACGb,EAAaf,MADhB,KAEGe,EAAac,aACVd,EAAac,aAAaC,UAAU,EAAG,GACvC,GAJN,QAQA,gBACEC,IAAG,yDAAoDhB,EAAaiB,aACpEC,IAAI,mCAGN,uCACc,IACXlB,EAAamB,aACVC,KAAKC,OAAmC,GAA5BrB,EAAamB,cAAmBG,QAAQ,GACpD,GAJN,QAOA,sCACA,uBAAItB,EAAauB,YAEjB,oCACA,uBACGvB,EAAawB,OACVxB,EAAawB,OAAOzC,KAAI,SAAA0C,GAAK,OAAIA,EAAMhC,IAAV,IAAgBiC,KAAK,KAClD,MAGN,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["API.jsx","pages/MovieDetailsPage.jsx","hooks/useMovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=b73810f30834902141b2936b6716020f';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`/trending/movie/day${API_KEY}`);\n    return response.data.results.map(({ id, title }) => {\n        return {\n            id,\n            title,\n        };\n    });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useMovieDetails } from 'hooks/useMovieDetails';\n// import * as API from '../API';\n// import { useState, useEffect } from 'react';\n\n// const useMovieDetails = movieId => {\n//   const [movieDetails, setMovieDetails] = useState([]);\n\n//   useEffect(() => {\n//     API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n//       setMovieDetails(movieDetailsReturnedFromApi)\n//     );\n//   }, [movieId]);\n\n//   return { movieDetails };\n// };\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        {' '}\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      <h2>\n        {movieDetails.title} (\n        {movieDetails.release_date\n          ? movieDetails.release_date.substring(0, 4)\n          : ''}\n        )\n      </h2>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n        alt=\"{movieDetails.original_title}\"\n      />\n\n      <p>\n        User Score:{' '}\n        {movieDetails.vote_average\n          ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n          : ''}\n        %\n      </p>\n      <h3>Overview</h3>\n      <p>{movieDetails.overview}</p>\n\n      <h4>Genres</h4>\n      <p>\n        {movieDetails.genres\n          ? movieDetails.genres.map(genre => genre.name).join(' ')\n          : ''}\n      </p>\n\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import * as API from '../API';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n      setMovieDetails(movieDetailsReturnedFromApi)\n    );\n  }, [movieId]);\n\n  return { movieDetails };\n};\n"],"names":["axios","API_KEY","getTrending","response","data","results","map","id","title","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","useState","movieDetails","setMovieDetails","useEffect","API","then","movieDetailsReturnedFromApi","useMovieDetails","useParams","backLinkHref","useLocation","state","from","to","type","release_date","substring","src","poster_path","alt","vote_average","Math","fround","toFixed","overview","genres","genre","join"],"sourceRoot":""}